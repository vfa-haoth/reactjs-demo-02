{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Documents/ForStudy/season02-final/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Documents/ForStudy/season02-final/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Documents/ForStudy/season02-final/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Documents/ForStudy/season02-final/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Documents/ForStudy/season02-final/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Documents/ForStudy/season02-final/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport FlowPanel from './components/FlowPanel';\nimport Controller from './components/Controller';\nimport Table from './components/Table';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tasks: [],\n      isDisplayed: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"onToggleForm\",\n    value: function onToggleForm() {\n      this.setState({\n        isDisplayed: !this.state.isDisplayed\n      });\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      this.setState({\n        isDisplayed: false\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      var tasks = this.state.tasks;\n      tasks.push(data);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayed = _this$state.isDisplayed; // var tasks = this.state.tasks\n\n      var eleFPanel = isDisplayed ? React.createElement(FlowPanel, {\n        onToggleForm: this.onToggleForm.bind(this),\n        onClose: this.onClose.bind(this),\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Work management\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayed ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, eleFPanel), React.createElement(\"div\", {\n        className: isDisplayed ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Controller, {\n        onGenerateData: this.onGenerateData,\n        isDisplayed: isDisplayed,\n        onToggleForm: this.onToggleForm.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tasks: tasks,\n        onChangeStatus: this.onChangeStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Documents/ForStudy/season02-final/src/App.js"],"names":["React","Component","FlowPanel","Controller","Table","App","props","state","tasks","isDisplayed","localStorage","getItem","JSON","parse","setState","data","push","setItem","stringify","eleFPanel","onToggleForm","bind","onClose","onSubmit","onGenerateData","onChangeStatus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FlowPanel from './components/FlowPanel';\nimport Controller from './components/Controller';\nimport Table from './components/Table';\n\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      tasks : [],\n      isDisplayed : false\n    }\n  }\n\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n\n      this.setState({\n        tasks : tasks\n      });\n    }\n  }\n\n  onToggleForm(){\n    this.setState({\n      isDisplayed : !this.state.isDisplayed\n    });\n  }\n\n  onClose(){\n    this.setState({\n      isDisplayed : false\n    })\n  }\n\n  onSubmit(data){\n    var { tasks } = this.state; \n    tasks.push(data);\n\n    this.setState({\n      tasks : tasks\n    });\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  render() {\n\n    var { tasks, isDisplayed } = this.state; // var tasks = this.state.tasks\n    var eleFPanel = isDisplayed ? \n      <FlowPanel \n        onToggleForm = {this.onToggleForm.bind(this)}\n        onClose = {this.onClose.bind(this)}\n        onSubmit = {this.onSubmit.bind(this)}\n      /> \n      : '';\n\n    return (\n      <div className=\"container\">\n        <div className = \"Header\">\n          <h2 align=\"center\">Work management</h2>\n        </div>\n        <br/>\n        <div className = \"Body\">\n          <div className=\"row\">\n            <div className={ isDisplayed ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" \n              : '' }>\n              {eleFPanel}\n            </div>\n            <div className={ isDisplayed ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" \n              : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\" }\n            >\n              <Controller \n                onGenerateData = {this.onGenerateData} \n                isDisplayed = {isDisplayed} \n                onToggleForm = {this.onToggleForm.bind(this)}\n              />\n              <br/>\n              <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <Table tasks={tasks} onChangeStatus={this.onChangeStatus}/>\n                </div>\n              </div>           \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}